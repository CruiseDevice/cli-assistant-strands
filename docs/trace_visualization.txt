════════════════════════════════════════════════════════════════════════════════
  AGENT REASONING IN TRACES - VISUAL GUIDE
════════════════════════════════════════════════════════════════════════════════

┌──────────────────────────────────────────────────────────────────────────────┐
│                           THE DECISION FLOW                                  │
└──────────────────────────────────────────────────────────────────────────────┘

User Query: "What is 15% of 230?"
           │
           ↓
    ┏━━━━━━━━━━━━━━━━━━━━━━━━━━┓
    ┃   AGENT ORCHESTRATION   ┃  ← CAPTURED IN TRACE SPAN
    ┃   (What agent sends)    ┃
    ┗━━━━━━━━━━━━━━━━━━━━━━━━━━┛
           │
           ├─→ Available Tools:
           │   • calculator (description, input schema)
           │   • file_read (description, input schema)
           │   • current_time (description, input schema)
           │
           ├─→ Conversation History:
           │   • Message 0 (user): "What is 15% of 230?"
           │   • [Previous messages if any...]
           │
           └─→ System Prompt:
               "You are a helpful assistant with access to tools..."

           ↓ [Sent to Model]

    ┏━━━━━━━━━━━━━━━━━━━━━━━━━━┓
    ┃    MODEL PROCESSES      ┃
    ┃    (LLM Decision)       ┃
    ┗━━━━━━━━━━━━━━━━━━━━━━━━━━┛
           │
           │ Analyzes:
           │ • Query mentions "15%" and "230" → math problem
           │ • Looks at available tools → calculator can do math
           │ • Checks calculator input schema → needs "expression"
           │ • Formulates: "230 * 0.15"
           │
           ↓ [Returns Decision]

    ┏━━━━━━━━━━━━━━━━━━━━━━━━━━┓
    ┃   MODEL'S DECISION      ┃  ← CAPTURED IN TRACE SPAN
    ┃   (Tool Selection)      ┃
    ┗━━━━━━━━━━━━━━━━━━━━━━━━━━┛
           │
           └─→ Selected Tool: "calculator"
               Tool Use ID: "tooluse_abc123"
               Inputs: {"expression": "230 * 0.15"}

           ↓ [Agent executes]

    ┏━━━━━━━━━━━━━━━━━━━━━━━━━━┓
    ┃   TOOL EXECUTION        ┃  ← CAPTURED IN TRACE SPAN
    ┃   (Agent runs tool)     ┃
    ┗━━━━━━━━━━━━━━━━━━━━━━━━━━┛
           │
           └─→ Status: "success"
               Result: "34.5"

           ↓

Final Response: "15% of 230 is 34.5"


════════════════════════════════════════════════════════════════════════════════
  TRACE STRUCTURE IN OBSERVABILITY PLATFORM
════════════════════════════════════════════════════════════════════════════════

Service: smart-cli-assistant
Trace ID: f8e7d6c5-b4a3-9281-7060-5040302010

╔══════════════════════════════════════════════════════════════════════════════╗
║ strands-agent                                                      [2.5s]    ║
╠══════════════════════════════════════════════════════════════════════════════╣
║                                                                              ║
║  ┌────────────────────────────────────────────────────────────────────┐     ║
║  │ agent.orchestration                                        [50ms]  │     ║
║  ├────────────────────────────────────────────────────────────────────┤     ║
║  │ Attributes:                                                        │     ║
║  │   agent.tools.count: 3                                             │     ║
║  │   agent.tools.available: ["calculator", "file_read", ...]         │     ║
║  │   agent.messages.count: 1                                          │     ║
║  │   agent.system_prompt: "You are a helpful..."                     │     ║
║  │                                                                    │     ║
║  │ Events:                                                            │     ║
║  │   • agent.tool.spec.0                                             │     ║
║  │     - tool.name: "calculator"                                     │     ║
║  │     - tool.description: "Perform mathematical calculations"       │     ║
║  │     - tool.input_schema: { ... }                                  │     ║
║  │                                                                    │     ║
║  │   • agent.message.0                                               │     ║
║  │     - message.role: "user"                                        │     ║
║  │     - message.content: "What is 15% of 230?"                      │     ║
║  └────────────────────────────────────────────────────────────────────┘     ║
║                                                                              ║
║  ┌────────────────────────────────────────────────────────────────────┐     ║
║  │ Model invoke (Bedrock API)                                [1.2s]   │     ║
║  ├────────────────────────────────────────────────────────────────────┤     ║
║  │   gen_ai.request.model: "claude-3-5-haiku"                        │     ║
║  │   gen_ai.usage.input_tokens: 850                                  │     ║
║  │   gen_ai.usage.output_tokens: 45                                  │     ║
║  └────────────────────────────────────────────────────────────────────┘     ║
║                                                                              ║
║  ┌────────────────────────────────────────────────────────────────────┐     ║
║  │ model.tool_decision                                        [100ms] │     ║
║  ├────────────────────────────────────────────────────────────────────┤     ║
║  │ Attributes:                                                        │     ║
║  │   model.decision.type: "tool_use"                                 │     ║
║  │   model.tool.selected: "calculator"                               │     ║
║  │   model.tool.use_id: "tooluse_abc123"                             │     ║
║  │   model.tool.inputs: {"expression": "230 * 0.15"}                 │     ║
║  │                                                                    │     ║
║  │ Events:                                                            │     ║
║  │   • model.decided_tool                                            │     ║
║  │     - tool.name: "calculator"                                     │     ║
║  │     - tool.inputs.full: {"expression": "230 * 0.15"}              │     ║
║  │     - decision.explanation: "Model selected calculator..."        │     ║
║  └────────────────────────────────────────────────────────────────────┘     ║
║                                                                              ║
║  ┌────────────────────────────────────────────────────────────────────┐     ║
║  │ Tool: calculator                                           [10ms]  │     ║
║  ├────────────────────────────────────────────────────────────────────┤     ║
║  │   Executes: 230 * 0.15                                            │     ║
║  └────────────────────────────────────────────────────────────────────┘     ║
║                                                                              ║
║  ┌────────────────────────────────────────────────────────────────────┐     ║
║  │ agent.tool_execution_result                                [5ms]   │     ║
║  ├────────────────────────────────────────────────────────────────────┤     ║
║  │ Attributes:                                                        │     ║
║  │   tool.use_id: "tooluse_abc123"                                   │     ║
║  │   tool.status: "success"                                          │     ║
║  │   tool.result.summary: "34.5"                                     │     ║
║  │                                                                    │     ║
║  │ Events:                                                            │     ║
║  │   • tool.execution_completed                                      │     ║
║  │     - tool.result.full: [{"text": "34.5"}]                        │     ║
║  └────────────────────────────────────────────────────────────────────┘     ║
║                                                                              ║
╚══════════════════════════════════════════════════════════════════════════════╝


════════════════════════════════════════════════════════════════════════════════
  WHAT EACH SPAN TELLS YOU
════════════════════════════════════════════════════════════════════════════════

┌─ agent.orchestration ─────────────────────────────────────────────────────┐
│ "What information did the agent provide to help the model decide?"        │
│                                                                            │
│ ✓ All available tools (so you know what options the model had)            │
│ ✓ Tool descriptions (so you know how tools were explained)                │
│ ✓ Input schemas (so you know what parameters were possible)               │
│ ✓ Conversation history (so you know what context the model had)           │
│ ✓ System prompt (so you know what instructions guided the model)          │
└────────────────────────────────────────────────────────────────────────────┘

┌─ model.tool_decision ─────────────────────────────────────────────────────┐
│ "How did the model use that information to make its decision?"            │
│                                                                            │
│ ✓ Which tool was selected (the decision)                                  │
│ ✓ What parameters were chosen (the reasoning)                             │
│ ✓ Tool use ID (for tracing)                                               │
│ ✓ Full decision context (for debugging)                                   │
└────────────────────────────────────────────────────────────────────────────┘

┌─ agent.tool_execution_result ────────────────────────────────────────────┐
│ "What was the outcome of executing that decision?"                        │
│                                                                            │
│ ✓ Execution status (success/error)                                        │
│ ✓ Result content (what was returned)                                      │
│ ✓ Errors if any (for troubleshooting)                                     │
│ ✓ Full result data (for analysis)                                         │
└────────────────────────────────────────────────────────────────────────────┘


════════════════════════════════════════════════════════════════════════════════
  ANSWERING KEY QUESTIONS FROM TRACES
════════════════════════════════════════════════════════════════════════════════

❓ "Why did the agent choose the wrong tool?"

📊 Look at agent.orchestration span:
   • Was the correct tool in agent.tools.available?
   • Was the tool description clear enough?
   • Did the system prompt guide toward the wrong tool?
   • What was in the conversation history that might have confused it?

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

❓ "Why did the model choose these specific parameters?"

📊 Look at model.tool_decision span:
   • See model.tool.inputs for the chosen parameters
   • Compare to the tool.input_schema from orchestration span
   • Check the user query in agent.message.0
   • See how the model interpreted the query

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

❓ "Is my system prompt helping or hurting tool selection?"

📊 Compare traces with different prompts:
   • Group by agent.system_prompt attribute
   • Measure tool selection accuracy
   • Correlate prompts with tool.status
   • A/B test different prompt strategies

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

❓ "How is context affecting tool selection?"

📊 Look at agent.messages.count over time:
   • Track conversation length
   • See what previous tool results are in context
   • Identify when context becomes too large
   • Understand context window issues

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

❓ "Are my tool descriptions good enough?"

📊 Look at agent.tool.spec events:
   • See exactly how tools are described to the model
   • Correlate descriptions with selection accuracy
   • Test different descriptions
   • Optimize for clarity


════════════════════════════════════════════════════════════════════════════════
  INTEGRATION CHEAT SHEET
════════════════════════════════════════════════════════════════════════════════

1. Import:
   from utils.trace_enrichment import setup_enriched_tracing

2. Create agent:
   agent = Agent(model=..., tools=..., system_prompt=...)

3. Enable tracing:
   setup_enriched_tracing(agent, service_name="my-app")

4. Use normally:
   result = agent("Your query here")

5. View traces:
   http://localhost:16686 (Jaeger)
   AWS X-Ray Console (AWS)
   Grafana → Explore → Tempo (Grafana)

That's it! All orchestration details are automatically captured.


════════════════════════════════════════════════════════════════════════════════
